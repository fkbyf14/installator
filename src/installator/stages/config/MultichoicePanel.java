package installator.stages.config;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.*;
import java.util.List;

/**
 * @author cfif11
 */
public class MultichoicePanel extends StagePanel<Integer[]> {
	private final JCheckBox[] checkBoxes;
	private JPanel panel1;
	private JPanel panel2;
	private JLabel label;
	private JButton button1;
	private JButton button2;
	private JButton button3;
	private int numberSelect;

	{
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
		$$$setupUI$$$();
	}

	/**
	 * Method generated by IntelliJ IDEA GUI Designer
	 * >>> IMPORTANT!! <<<
	 * DO NOT edit this method OR call it in your code!
	 *
	 * @noinspection ALL
	 */
	private void $$$setupUI$$$() {
		panel1 = new JPanel();
		panel1.setLayout(new BorderLayout(0, 0));
		final JPanel panel3 = new JPanel();
		panel3.setLayout(new BorderLayout(0, 0));
		panel1.add(panel3, BorderLayout.SOUTH);
		final JPanel panel4 = new JPanel();
		panel4.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
		panel3.add(panel4, BorderLayout.EAST);
		button1 = new JButton();
		button1.setText("Button");
		panel4.add(button1);
		button2 = new JButton();
		button2.setText("Button");
		panel4.add(button2);
		button3 = new JButton();
		button3.setText("Button");
		panel4.add(button3);
		panel2 = new JPanel();
		panel2.setLayout(new GridBagLayout());
		panel1.add(panel2, BorderLayout.WEST);
		label = new JLabel();
		label.setText("Label");
		GridBagConstraints gbc;
		gbc = new GridBagConstraints();
		gbc.gridx = 0;
		gbc.gridy = 0;
		gbc.anchor = GridBagConstraints.WEST;
		panel2.add(label, gbc);
	}

	/**
	 * @noinspection ALL
	 */
	public JComponent $$$getRootComponent$$$() {
		return panel1;
	}

	class MyItemListener implements ItemListener {
		int temp;

		MyItemListener(int temp) {
			this.temp = temp;
		}

		@Override
		public void itemStateChanged(ItemEvent e) {
			int i = (checkBoxes[temp].isSelected()) ? 1 : -1;
			numberSelect += i;
			button2.setEnabled(numberSelect != 0);
		}
	}

	MultichoicePanel(int index, String text, String[] radioButtonsText) {
		super(index);
		init();
		label.setText(text);
		checkBoxes = new JCheckBox[radioButtonsText.length];
		GridBagConstraints gbc;
		for (int i = 0; i < radioButtonsText.length; i++) {
			checkBoxes[i] = new JCheckBox();
			checkBoxes[i].setText(radioButtonsText[i]);
			checkBoxes[i].addItemListener(new MyItemListener(i));
			gbc = new GridBagConstraints();
			gbc.gridx = 0;
			gbc.gridy = i + 1;
			gbc.anchor = GridBagConstraints.WEST;
			panel2.add(checkBoxes[i], gbc);
		}
		button2.setEnabled(false);
		button3.addActionListener(exitListener);
		button2.addActionListener(nextListener);
		button1.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {

			}
		});
	}

	@Override
	public JPanel getGUI() {
		return panel1;
	}

	@Override
	protected void init() {
		panel1.setSize(400, 300);
		button1.setText("Назад");
		button2.setText("Вперед");
		button3.setText("Отмена");

	}

	@Override
	protected void calcData() {
		List<Integer> list = new ArrayList<>();
		for (int i = 0; i < checkBoxes.length; i++) {
			if (checkBoxes[i].isSelected()) {
				list.add(i);
			}
		}
		data = list.toArray(new Integer[list.size()]);
		super.calcData();
	}

}
